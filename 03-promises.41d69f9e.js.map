{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,UACpCC,EAAcF,SAASC,cAAc,uBACrCE,EAAaH,SAASC,cAAc,sBACpCG,EAAeJ,SAASC,cAAc,wBAE5C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,qBAAoCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAElDM,EAAO,oBAAmCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEjDA,E,IAiBPR,EAAWiB,iBAAiB,SAbH,SAAAC,GACvBA,EAAMC,iBAEN,IAAIC,EAAMC,OAAOlB,EAAYmB,MAAQlB,EAAWkB,OAChDC,QAAQC,IAAIJ,GAEZ,IAAK,IAAIK,EAAI,EAAGA,GAAKpB,EAAaiB,MAAOG,IACvCnB,EAAcmB,EAAIL,GAAOC,OAAOjB,EAAWkB,QACxCI,MAAK,SAAAJ,G,OAASK,EAAA7B,GAAS8B,OAAOC,QAAQP,E,IACtCQ,OAAM,SAAAC,G,OAASJ,EAAA7B,GAAS8B,OAAOI,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst $submitBtn = document.querySelector('button');\nconst $delayInput = document.querySelector('input[name=\"delay\"]');\nconst $stepInput = document.querySelector('input[name=\"step\"]');\nconst $amountInput = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nconst generatePromises = event => {\n  event.preventDefault();\n\n  let acc = Number($delayInput.value - $stepInput.value);\n  console.log(acc);\n\n  for (let i = 1; i <= $amountInput.value; i++) {\n    createPromise(i, (acc += Number($stepInput.value)))\n      .then(value => Notiflix.Notify.success(value))\n      .catch(error => Notiflix.Notify.failure(error));\n  }\n};\n\n$submitBtn.addEventListener('click', generatePromises);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$$submitBtn","document","querySelector","$ce04d3a99e08e73b$var$$delayInput","$ce04d3a99e08e73b$var$$stepInput","$ce04d3a99e08e73b$var$$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","addEventListener","event","preventDefault","acc","Number","value","console","log","i","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.41d69f9e.js.map"}