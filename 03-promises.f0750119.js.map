{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,UACpCC,EAAcF,SAASC,cAAc,uBACrCE,EAAaH,SAASC,cAAc,sBACpCG,EAAeJ,SAASC,cAAc,wBAE5C,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,qBAAqBN,QAAeC,OAE5CM,EAAO,oBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CAiBbR,EAAWgB,iBAAiB,SAbHC,IACvBA,EAAMC,iBAEN,IAAIC,EAAMC,OAAOjB,EAAYkB,MAAQjB,EAAWiB,OAChDC,QAAQC,IAAIJ,GAEZ,IAAK,IAAIK,EAAI,EAAGA,GAAKnB,EAAagB,MAAOG,IACvClB,EAAckB,EAAIL,GAAOC,OAAOhB,EAAWiB,QACxCI,MAAKJ,GAASK,EAAA5B,GAAS6B,OAAOC,QAAQP,KACtCQ,OAAMC,GAASJ,EAAA5B,GAAS6B,OAAOI,QAAQD,IAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst $submitBtn = document.querySelector('button');\nconst $delayInput = document.querySelector('input[name=\"delay\"]');\nconst $stepInput = document.querySelector('input[name=\"step\"]');\nconst $amountInput = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nconst generatePromises = event => {\n  event.preventDefault();\n\n  let acc = Number($delayInput.value - $stepInput.value);\n  console.log(acc);\n\n  for (let i = 1; i <= $amountInput.value; i++) {\n    createPromise(i, (acc += Number($stepInput.value)))\n      .then(value => Notiflix.Notify.success(value))\n      .catch(error => Notiflix.Notify.failure(error));\n  }\n};\n\n$submitBtn.addEventListener('click', generatePromises);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$$submitBtn","document","querySelector","$47d4ff9957288465$var$$delayInput","$47d4ff9957288465$var$$stepInput","$47d4ff9957288465$var$$amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","acc","Number","value","console","log","i","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.f0750119.js.map"}